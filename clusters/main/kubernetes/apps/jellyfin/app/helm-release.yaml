apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  interval: 15m
  chart:
    spec:
      chart: jellyfin
      version: 20.6.13
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    jellyfinUpdatePosterImage:
      repository: docker.io/iceshadow/jellyfinupdateposter
      pullPolicy: IfNotPresent
      tag: latest@sha256:32625c11032202db17d4316e4c707b81fb0d6f7ab82837a808d4ed954f0f0f9f
    global:
      stopAll: false
    credentials:
      minio:
        name: minio
        type: s3
        url: ${MINIO_URL}
        bucket: jellyfin
        encrKey: ${BACKUP_ENCRYPTION_KEY}
        accessKey: ${MINIO_ACCESS_KEY}
        secretKey: ${MINIO_SECRET_KEY}
    service:
      jellyfin-up:
        enabled: true
        targetSelector: jellyfin-up
        ports:
          jellyfin-up:
            enabled: true
            primary: true
            port: 8080
            targetPort: 8080
            targetSelector: jellyfin-up
    ingress:
      main:
        enabled: true
        hosts:
          - host: jellyfin.${DOMAIN_BASE}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: le-prod
          homepage:
            enabled: true
            group: Media
            href: https://{{ ( index .Values.ingress.main.hosts 0 ).host }}
            widget:
              enabled: true
              type: jellyfin
              url: https://{{ ( index .Values.ingress.main.hosts 0 ).host }}
              custom:
                key: ${HOMEPAGE_JELLYFIN_KEY}
          traefik:
            enabled: true
            entrypoints:
              - websecure
            middlewares:
              - name: real-ip
                namespace: "traefik"
              - name: geo-allowlist
                namespace: "traefik"
    persistence:
      config:
        volsync:
          - credentials: minio
            name: config
            type: restic
            cleanupTempPVC: true
            cleanupCachePVC: true
            dest:
              enabled: false
            src:
              enabled: true
              trigger:
                schedule: 5 3 * * *
      media:
        enabled: true
        type: nfs
        path: ${NFS_MEDIA_PATH}
        mountPath: /media
        server: ${TRUENAS_IP}
      appdata:
        enabled: true
        type: nfs
        path: ${NFS_APPS_PATH}
        server: ${TRUENAS_IP}
        targetSelector:
          jellyfin-up:
            jellyfin-up:
              mountPath: /appdata
    autodiscovery:
      enabled: true
    workload:
      main:
        podSpec:
          runtimeClassName: "nvidia"
          containers:
            main:
              resources:
                limits:
                  nvidia.com/gpu: 1
      jellyfin-up:
        enabled: true
        type: Deployment
        strategy: RollingUpdate
        replicas: 1
        podSpec:
          containers:
            jellyfin-up:
              primary: true
              enabled: true
              imageSelector: jellyfinUpdatePosterImage
              env:
                JELLYFIN_URL: http://jellyfin.jellyfin.${DNS_SUFFIX}:8096
                JELLYFIN_API_KEY: ${JELLYFIN_UPDATE_POSTER_API_KEY}
                TMDB_API_KEY: ${TMDB_API_KEY}
                INCLUDE_EPISODES: false
                ENABLE_WEBHOOK: false
                # SCHEDULED_TIMES: 06:00,12:00,18:00 # Optional: Schedule poster updates at specific times (HH:MM)
              args:
                - --force
              probes:
                readiness:
                  enabled: true
                  type: tcp
                  port: 8080
                liveness:
                  enabled: true
                  type: tcp
                  port: 8080
                startup:
                  enabled: true
                  type: tcp
                  port: 8080
