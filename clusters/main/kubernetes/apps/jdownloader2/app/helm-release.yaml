apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jdownloader2
  namespace: jdownloader2
spec:
  interval: 15m
  chart:
    spec:
      chart: jdownloader2
      version: 18.5.2
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  releaseName: jdownloader2
  values:
    release_name: jdownloader2
    TZ: ${TIMEZONE}
    credentials:
      minio:
        name: minio
        type: s3
        url: ${MINIO_BUCKET_URL}
        accessKey: ${MINIO_ACCESS_KEY}
        bucket: ${MINIO_BUCKET_NAME}
        encrKey: ${BACKUP_ENCRYPTION_KEY}
        secretKey: ${MINIO_SECRET_KEY}
    ingress:
      main:
        enabled: true
        hosts:
        - host: jdownloader.${DOMAIN_BASE}
          paths:
          - path: /
            pathType: Prefix
        integrations:
          certManager:
            certificateIssuer: le-prod
            enabled: true
          homepage:
            enabled: true
            group: Downloaders
            widget:
              type: jdownloader
              customkv:
              - key: client
                value: Ripper
              - key: username
                value: ${JDOWNLOADER2_USERNAME}
              - key: password
                value: ${JDOWNLOADER2_PASSWORD}
          traefik:
            enabled: true
            entrypoints:
            - websecure
            middlewares:
            - name: ca-us
              namespace: "traefik"
            - name: auth
              namespace: "traefik"
    jdownloader:
      KEEP_APP_RUNNING: true
      SECURE_CONNECTION: false
    persistence:
      config:
        enabled: true
        mountPath: /config
        readOnly: false
        volsync:
        - credentials: minio
          name: config
          type: restic
          dest:
            enabled: true
          src:
            enabled: false
      output:
        type: nfs
        enabled: true
        mountPath: /output
        path: /mnt/DSU/Software/Downloads
        readOnly: false
        server: ${TN_NFS_SERVER}
    service:
      main:
        enabled: true
        type: LoadBalancer
        ports:
          main:
            port: 10054
            targetPort: 5800
      myjd:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ""
        ports:
          myjd:
            enabled: true
            port: 3129
            targetPort: 3129
      vnc:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ""
        ports:
          vnc:
            enabled: true
            port: 10056
            targetPort: 5900
    # workload:
    #   main:
    #     podSpec:
    #       containers:
    #         main:
    #           securityContext:
    #             capabilities:
    #               add:
    #               - NET_BIND_SERVICE
    #               - KILL
