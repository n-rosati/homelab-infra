apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: forgejo
  namespace: forgejo
spec:
  interval: 2m
  timeout: 20m
  chart:
    spec:
      chart: app-template
      version: 15.8.4
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  releaseName: forgejo
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    release_name: forgejo
    global:
      stopAll: false
    image:
      repository: codeberg.org/forgejo/forgejo
      pullPolicy: IfNotPresent
      tag: 12.0.4-rootless
    credentials:
      home-s3:
        name: home-s3
        type: s3
        url: ${S3_URL}
        bucket: forgejo
        encrKey: ${BACKUP_ENCRYPTION_KEY}
        accessKey: ${S3_ACCESS_KEY}
        secretKey: ${S3_SECRET_KEY}
    service:
      main:
        enabled: true
        ports:
          main:
            enabled: true
            port: 3000
            protocol: http
            targetPort: 3000
          ssh:
            enabled: true
            port: 2222
            protocol: tcp
            targetPort: 2222
    ingress:
      main:
        enabled: true
        ingressClassName: external
        hosts:
          - host: code.${DOMAIN_0}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: le-prod
          nginx:
            enabled: true
          homepage:
            enabled: true
            name: Forgejo
            description: Forgejo is a self-hosted lightweight software forge.
            group: Apps
            icon: https://codeberg.org/forgejo/forgejo/raw/branch/forgejo/public/assets/img/forgejo.svg
            widget:
              enabled: false
    persistence:
      forgejo:
        enabled: true
        type: pvc
        mountPath: /etc/gitea
        volsync:
          - name: forgejo
            type: restic
            credentials: home-s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 0 4 * * *
      conf:
        enabled: true
        type: pvc
        mountPath: /var/lib/gitea
        volsync:
          - name: conf
            type: restic
            credentials: home-s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: 0 4 * * *
      ssh-key:
        enabled: true
        type: secret
        readOnly: true
        objectName: forgejo-app-template-ssh-key-secret
        expandObjectName: false
        mountPath: "/var/lib/ssh-key"
    # see kube-prometheus-stack for how this should be (re)done
    secret:
      ssh-key-secret:
        enabled: true
        data:
          private.key: ${FORGEJO_SSH_PRIVATE_KEY}
          public.key: ${FORGEJO_SSH_PUBLIC_KEY}
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                liveness:
                  enabled: true
                  path: "/"
                  port: 3000
                  type: http
                readiness:
                  enabled: true
                  port: 3000
                  type: http
                startup:
                  enabled: false
              env:
                FORGEJO__database__DB_TYPE: postgres
                FORGEJO__database__HOST: "{{ .Values.cnpg.main.creds.host }}"
                FORGEJO__database__NAME: "{{ .Values.cnpg.main.database }}"
                FORGEJO__database__USER: "{{ .Values.cnpg.main.user }}"
                FORGEJO__database__PASSWD: "{{ .Values.cnpg.main.password }}"
                FORGEJO__mailer__ENABLED: "true"
                FORGEJO__mailer__SMTP_ADDR: "${SMTP_SERVER}"
                FORGEJO__mailer__SMTP_PORT: "${SMTP_PORT}"
                FORGEJO__mailer__USER: "${SERVICE_EMAIL}"
                FORGEJO__mailer__PASSWD: "${SERVICE_EMAIL_PASSWORD}"
                FORGEJO__mailer__FROM: "Forgejo <${SERVICE_EMAIL}>"
                FORGEJO__repository.signing__FORMAT: "ssh"
                FORGEJO__repository.signing__SIGNING_KEY: "/var/lib/ssh-key/public.key"
                FORGEJO__security__SECRET_KEY: "${FORGEJO_SECRET_KEY}"
                FORGEJO__security__PASSWORD_CHECK_PWN: "true"
                FORGEJO__repository.signing__DEFAULT_TRUST_MODEL: "committer"
                FORGEJO__service__ENABLE_INTERNAL_SIGNIN: "false"
                FORGEJO__openid__ENABLE_OPENID_SIGNIN: false
                FORGEJO__oauth2__ENABLE_AUTO_REGISTRATION: true
                FORGEJO__oauth2__USERNAME: userid
    cnpg:
      main:
        enabled: true
        database: forgejo
        user: forgejo
        password: ${FORGEJO_DB_PASSWORD}
        pgVersion: 16
        mode: standalone # CHANGE TO RECOVERY WHEN REINSTALLING
        cluster:
          singleNode: true
        backups:
          enabled: true
          revision: "1"
          credentials: home-s3
        recovery:
          enabled: true
          revision: "1"
          credentials: home-s3
    addons:
      codeserver:
        enabled: true
        service:
          type: LoadBalancer
        ingress:
          enabled: true
          ingressClassName: external
          hosts:
            - host: edit-code.${DOMAIN_0}
          integrations:
            certManager:
            enabled: true
            certificateIssuer: le-prod
          nginx:
            enabled: true
            auth:
              type: authelia
              internalHost: ${AUTHELIA_INTERNAL_DNS}
              externalHost: ${AUTHELIA_EXTERNAL_DNS}
