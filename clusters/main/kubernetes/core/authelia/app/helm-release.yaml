apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
  namespace: authelia
spec:
  interval: 15m
  chart:
    spec:
      chart: authelia
      version: 27.1.8
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      stopAll: false
    credentials:
      minio:
        name: minio
        type: s3
        url: ${MINIO_URL}
        bucket: authelia
        encrKey: ${BACKUP_ENCRYPTION_KEY}
        accessKey: ${MINIO_ACCESS_KEY}
        secretKey: ${MINIO_SECRET_KEY}
    ingress:
      main:
        enabled: true
        required: true
        hosts:
          - host: auth.${DOMAIN_BASE}
        integrations:
          certManager:
            enabled: true
            certificateIssuer: le-staging
          traefik:
            allowCors: true
            enabled: true
            entrypoints:
              - websecure
            middlewares:
              - name: real-ip
                namespace: "traefik"
              - name: geo-allowlist
                namespace: "traefik"
    cnpg:
      main:
        mode: standalone # FIXME CHANGE TO RECOVERY WHEN RESTORING
        password: ${CNPG_PASSWORD}
        backups:
          enabled: true
          revision: "1"
          credentials: minio
        recovery:
          enabled: false
          method: object_store
          credentials: minio
          revision: ""
        cluster:
          singleNode: true
        monitoring:
          enablePodMonitor: true
    authelia:
      theme: auto
      log:
        level: info
        format: json
      totp:
        issuer: Authelia
      session:
        cookies:
          - domain: ${DOMAIN_BASE}
            authelia_url: https://auth.${DOMAIN_BASE}
            default_redirection_url: https://homepage.${DOMAIN_BASE}
            inactivity: 2w
      authentication_backend:
        ldap:
          address: ldap://${LLDAP_DNS_NAME}:3890
          implementation: lldap
          tls:
            server_name: lldap.${DOMAIN_BASE}
          base_dn: ${LDAP_BASE_DN}
          additional_users_dn: ou=people
          users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
          additional_groups_dn: ou=groups
          groups_filter: (&(member={dn})(objectClass=groupOfNames))
          user: uid=admin,ou=people,${LDAP_BASE_DN}
          password: ${LDAP_USER_PASS}
          attributes:
            username: uid
            display_name: cn
            mail: mail
            group_name: cn
      notifier:
        disable_startup_check: true #FIXME: REMOVE
        smtp:
          address: "smtp://${SMTP_SERVER}:${SMTP_PORT}"
          timeout: 5s
          username: ${SMTP_FROM}
          password: ${SMTP_PASSWORD}
          sender: "Authelia <${SMTP_FROM}>"
          identifier: ${SMTP_FROM}
          subject: '[Authelia] {title}'
          startup_check_address: test@authelia.com
          disable_require_tls: false
          disable_html_emails: false
          tls:
            server_name: ${EMAIL_DOMAIN}
      access_control:
        default_policy: deny
        rules:
          - domain: '*.${DOMAIN_BASE}'
            networks:
              - 192.168.2.0/24
            policy: bypass
          - domain: '*.${DOMAIN_BASE}'
            policy: one_factor
            subject:
              - group:users
      regulation:
        max_retries: 5
      password_policy:
        zxcvbn:
          enabled: true
          min_score: 3
    workload:
      main:
        replicas: 1
        podSpec:
          containers:
            main:
              env:
                AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_SECRET}
                AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET: ${AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET}
                AUTHELIA_STORAGE_ENCRYPTION_KEY: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
